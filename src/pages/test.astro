---
// https://www.wakfu.com/en/forum/332-development/239038-string-logical-template-how-do-i-interpret-these-operators-translations?poid=1087235
// https://dev.to/heymarkkop/decoding-wakfu-s-action-effects-with-javascript-1nm2
import Layout from "@/layouts/Layout.astro";

import items from "@items";
import actions from "@actions";

let descriptions: string[] = []
let item1 = items[516]

for (const effect of item1.definition.equipEffects) {
  let stack = 0

  const effectParams = effect.effect.definition.params

  const hasThreeOrMoreArguments = effectParams.length >= 6 // [~3]

  const firstParam = () => {
    const value = effectParams[0] + effectParams[1] * item1.definition.item.level
    stack = value
    return value
  }

  const secondParam = () => {
    const value = effectParams[2] + effectParams[3] * item1.definition.item.level
    stack = value
    return value
  }

  const thirdParam = () => {
    const value = effectParams[4] + effectParams[5] * item1.definition.item.level
    stack = value
    return value
  }

  const isLastStackValueGreaterThanTwo = () => stack > 2 // [>2]
  const plural = () => isLastStackValueGreaterThanTwo() ? 's' : '' // [>2]?s:

  const effectActionId = effect.effect.definition.actionId
  const action = actions.find(action => action.definition.id === effectActionId)
  let actionDescription = action.description.es

  if (actionDescription == undefined) {continue}

  //actionDescription = actionDescription.replaceAll("{", "").replaceAll("}", "")


  /*if (actionDescription.includes("[#1]") && numberOfParams >= 1)
    actionDescription = actionDescription.replaceAll("[#1]", `${effectParams[0] + effectParams[1] * item1.definition.item.level}`)

  if(actionDescription.includes("[#2]") && numberOfParams >= 2)
    actionDescription = actionDescription.replaceAll("[#2]", `${effectParams[2] + effectParams[3] * item1.definition.item.level}`)

  if(actionDescription.includes("[#3]") && numberOfParams >= 3)
    actionDescription = actionDescription.replaceAll("[#3]", `${effectParams[4] + effectParams[5] * item1.definition.item.level}`)

  if (actionDescription.includes("[~3]") && numberOfParams < 3) {
    actionDescription = actionDescription.substring(actionDescription.indexOf(":")+1)
  }*/
  //actionDescription = actionDescription.replace("[~3]", `${numberOfParams >= 3}`)

  actionDescription = actionDescription.replace("[el1]", "Fuego")
  actionDescription = actionDescription.replace("[el2]", "Agua")
  actionDescription = actionDescription.replace("[el3]", "Tierra")
  actionDescription = actionDescription.replace("[el4]", "Aire")

  descriptions.push(actionDescription)
}
---

<Layout title="Test">
  <h2 class="text-3xl font-bold">{item1.title.es}</h2>
  <section>
    {
      descriptions.map((description) => {
        return <p>{description}</p>
      })
    }
  </section>
</Layout>
